{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  inputDate: document.querySelector('#datetime-picker'),\n  startButton: document.querySelector('[data-start]'),\n  daysEl: document.querySelector('[data-days]'),\n  hoursEl: document.querySelector('[data-hours]'),\n  minutesEl: document.querySelector('[data-minutes]'),\n  secondsEl: document.querySelector('[data-seconds]'),\n};\n\nlet timerId = null;\nlet selectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      return iziToast.error({\n        title: 'Error',\n        position: 'topRight',\n        message: 'Please choose a date in the future',\n      });\n    }\n    selectedDate = selectedDates[0];\n    refs.startButton.disabled = false;\n  },\n};\n\nrefs.startButton.addEventListener('click', createTimer);\n\nflatpickr(refs.inputDate, options);\n\nfunction createTimer() {\n  timerId = setInterval(updateTimer, 1000);\n  refs.startButton.disabled = true;\n  refs.inputDate.disabled = true;\n}\n\nfunction updateTimer() {\n  const time = selectedDate - new Date();\n  const { days, hours, minutes, seconds } = convertMs(time);\n  refs.daysEl.textContent = addLeadingZero(days);\n  refs.hoursEl.textContent = addLeadingZero(hours);\n  refs.minutesEl.textContent = addLeadingZero(minutes);\n  refs.secondsEl.textContent = addLeadingZero(seconds);\n  if (time < 1000) {\n    clearInterval(timerId);\n    refs.inputDate.disabled = false;\n  }\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, 0);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["refs","timerId","selectedDate","options","selectedDates","iziToast","createTimer","flatpickr","updateTimer","time","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"sGAMA,MAAMA,EAAO,CACX,UAAW,SAAS,cAAc,kBAAkB,EACpD,YAAa,SAAS,cAAc,cAAc,EAClD,OAAQ,SAAS,cAAc,aAAa,EAC5C,QAAS,SAAS,cAAc,cAAc,EAC9C,UAAW,SAAS,cAAc,gBAAgB,EAClD,UAAW,SAAS,cAAc,gBAAgB,CACpD,EAEA,IAAIC,EAAU,KACVC,EAAe,KAEnB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAIA,EAAc,CAAC,EAAI,IAAI,KACzB,OAAOC,EAAS,MAAM,CACpB,MAAO,QACP,SAAU,WACV,QAAS,oCACjB,CAAO,EAEHH,EAAeE,EAAc,CAAC,EAC9BJ,EAAK,YAAY,SAAW,EAC7B,CACH,EAEAA,EAAK,YAAY,iBAAiB,QAASM,CAAW,EAEtDC,EAAUP,EAAK,UAAWG,CAAO,EAEjC,SAASG,GAAc,CACrBL,EAAU,YAAYO,EAAa,GAAI,EACvCR,EAAK,YAAY,SAAW,GAC5BA,EAAK,UAAU,SAAW,EAC5B,CAEA,SAASQ,GAAc,CACrB,MAAMC,EAAOP,EAAe,IAAI,KAC1B,CAAE,KAAAQ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EACxDT,EAAK,OAAO,YAAce,EAAeL,CAAI,EAC7CV,EAAK,QAAQ,YAAce,EAAeJ,CAAK,EAC/CX,EAAK,UAAU,YAAce,EAAeH,CAAO,EACnDZ,EAAK,UAAU,YAAce,EAAeF,CAAO,EAC/CJ,EAAO,MACT,cAAcR,CAAO,EACrBD,EAAK,UAAU,SAAW,GAE9B,CAEA,SAASe,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,CAAC,CACpC,CAEA,SAASF,EAAUG,EAAI,CAMrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EACjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}